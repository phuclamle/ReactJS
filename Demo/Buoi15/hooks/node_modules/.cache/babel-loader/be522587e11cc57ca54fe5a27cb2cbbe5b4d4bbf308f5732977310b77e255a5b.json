{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\ReactJs\\\\Demo\\\\Buoi14\\\\hooks\\\\src\\\\components\\\\UseState.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\n\n// const [state,setState] = useState(initState)\n// Nhiệm vụ của useState: quản lý trạng thái component\n// input: initState là tất cả các kiểu dữ liệu có trong js\n//      -number, string, boolean, null. undefined\n//      - array, object, callback\n// output: trả về 1 mảng, mảng này có 2 giá trị.\n//  giá trị thứ nhất cùng kiểu dữ liệu mà initState trả về\n//  giá trị thứ hai là một hàm, hàm này có nhiệm vụ cập nhật value mới cho giá trị thứ nhất\n\n// lần đầu tiên count có giá tri là 10\n// const [count, setCount] = useState(10)\n// count = 10;\n// setCount(20)\n\n// const result = useState(10)\n// let count = result(0)\n// let setCount = result[1]\n// count = 10;\n// setCount(20)\n\n// nguyên lý: mỗi khi thực thi hàm setState() thì component sẽ được re-render\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UseState() {\n  _s();\n  // Logic\n  const [number, setNumber] = useState(0);\n\n  // UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n// const UseState = () =>{\n//     return(\n//         <div>\n//             <h1>Learning useState</h1>\n//         </div>\n//     )\n// }\n_s(UseState, \"GKEoWTtNxfBhD14nezlDzGv7iSo=\");\n_c = UseState;\nexport default UseState;\nvar _c;\n$RefreshReg$(_c, \"UseState\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UseState","_s","number","setNumber","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/ReactJs/Demo/Buoi14/hooks/src/components/UseState.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n// const [state,setState] = useState(initState)\r\n// Nhiệm vụ của useState: quản lý trạng thái component\r\n// input: initState là tất cả các kiểu dữ liệu có trong js\r\n//      -number, string, boolean, null. undefined\r\n//      - array, object, callback\r\n// output: trả về 1 mảng, mảng này có 2 giá trị.\r\n//  giá trị thứ nhất cùng kiểu dữ liệu mà initState trả về\r\n//  giá trị thứ hai là một hàm, hàm này có nhiệm vụ cập nhật value mới cho giá trị thứ nhất\r\n\r\n// lần đầu tiên count có giá tri là 10\r\n// const [count, setCount] = useState(10)\r\n// count = 10;\r\n// setCount(20)\r\n\r\n// const result = useState(10)\r\n// let count = result(0)\r\n// let setCount = result[1]\r\n// count = 10;\r\n// setCount(20)\r\n\r\n// nguyên lý: mỗi khi thực thi hàm setState() thì component sẽ được re-render\r\n \r\nfunction UseState(){\r\n    // Logic\r\n    const [number,setNumber] = useState(0)\r\n   \r\n    // UI\r\n    return(\r\n        \r\n         <div>\r\n             <h1> {number}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const UseState = () =>{\r\n//     return(\r\n//         <div>\r\n//             <h1>Learning useState</h1>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default UseState;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACf;EACA,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;;EAEtC;EACA,oBAEKE,OAAA;IAAAK,QAAA,eACIL,OAAA;MAAAK,QAAA,GAAI,GAAC,EAACF,MAAM;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAP,EAAA,CAnBSD,QAAQ;AAAAS,EAAA,GAART,QAAQ;AAqBjB,eAAeA,QAAQ;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}